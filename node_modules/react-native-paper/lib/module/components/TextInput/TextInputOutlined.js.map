{"version":3,"names":["React","View","TextInput","NativeTextInput","StyleSheet","I18nManager","Platform","AdornmentType","AdornmentSide","TextInputAdornment","getAdornmentConfig","getAdornmentStyleAdjustmentForNativeInput","MAXIMIZED_LABEL_FONT_SIZE","MINIMIZED_LABEL_FONT_SIZE","LABEL_WIGGLE_X_OFFSET","ADORNMENT_SIZE","OUTLINE_MINIMIZED_LABEL_Y_OFFSET","LABEL_PADDING_TOP","MIN_DENSE_HEIGHT_OUTLINED","LABEL_PADDING_TOP_DENSE","calculateLabelTopPosition","calculateInputHeight","calculatePadding","adjustPaddingOut","interpolatePlaceholder","calculateOutlinedIconAndAffixTopPosition","getOutlinedInputColors","getConstants","InputLabel","LabelBackground","TextInputOutlined","disabled","editable","label","error","selectionColor","underlineColor","_underlineColor","outlineColor","customOutlineColor","activeOutlineColor","textColor","dense","style","theme","render","props","multiline","parentState","innerRef","onFocus","forceFocus","onBlur","onChangeText","onLayoutAnimatedText","onLeftAffixLayoutChange","onRightAffixLayoutChange","left","right","placeholderTextColor","testID","rest","adornmentConfig","colors","isV3","roundness","font","fonts","bodyLarge","regular","hasActiveOutline","focused","INPUT_PADDING_HORIZONTAL","MIN_HEIGHT","ADORNMENT_OFFSET","fontSize","fontSizeStyle","fontWeight","lineHeight","height","backgroundColor","background","textAlign","viewStyle","flatten","inputTextColor","activeColor","placeholderColor","errorColor","labelScale","fontScale","labelWidth","labelLayout","width","labelHeight","labelHalfWidth","labelHalfHeight","baseLabelTranslateX","isRTL","labelTranslationXOffset","isAdornmentLeftIcon","some","side","type","Left","Icon","minInputHeight","inputHeight","topPosition","console","warn","paddingSettings","offset","scale","isAndroid","OS","styles","inputOutlinedDense","inputOutlined","pad","paddingOut","baseLabelTranslateY","placeholderOpacity","labeled","measured","placeholderStyle","position","paddingHorizontal","labelProps","wiggleOffsetX","maxFontSizeMultiplier","minHeight","outlinedHeight","leftLayout","rightLayout","leftAffixTopPosition","affixHeight","labelYOffset","rightAffixTopPosition","iconTopPosition","rightAffixWidth","leftAffixWidth","adornmentStyleAdjustmentForNativeInput","mode","affixTopPosition","Right","onAffixChange","adornmentProps","Affix","isTextInputFocused","length","textStyle","visible","labelContainer","paddingTop","ref","placeholder","underlineColorAndroid","input","color","textAlignVertical","outline","Outline","borderRadius","borderWidth","borderColor","create","top","bottom","paddingBottom","flexGrow","margin","zIndex"],"sources":["TextInputOutlined.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  View,\n  TextInput as NativeTextInput,\n  StyleSheet,\n  I18nManager,\n  Platform,\n  TextStyle,\n  ColorValue,\n} from 'react-native';\n\nimport { AdornmentType, AdornmentSide } from './Adornment/enums';\nimport TextInputAdornment, {\n  getAdornmentConfig,\n  getAdornmentStyleAdjustmentForNativeInput,\n  TextInputAdornmentProps,\n} from './Adornment/TextInputAdornment';\nimport {\n  MAXIMIZED_LABEL_FONT_SIZE,\n  MINIMIZED_LABEL_FONT_SIZE,\n  LABEL_WIGGLE_X_OFFSET,\n  ADORNMENT_SIZE,\n  OUTLINE_MINIMIZED_LABEL_Y_OFFSET,\n  LABEL_PADDING_TOP,\n  MIN_DENSE_HEIGHT_OUTLINED,\n  LABEL_PADDING_TOP_DENSE,\n} from './constants';\nimport {\n  calculateLabelTopPosition,\n  calculateInputHeight,\n  calculatePadding,\n  adjustPaddingOut,\n  Padding,\n  interpolatePlaceholder,\n  calculateOutlinedIconAndAffixTopPosition,\n  getOutlinedInputColors,\n  getConstants,\n} from './helpers';\nimport InputLabel from './Label/InputLabel';\nimport LabelBackground from './Label/LabelBackground';\nimport type { RenderProps, ChildTextInputProps } from './types';\n\nconst TextInputOutlined = ({\n  disabled = false,\n  editable = true,\n  label,\n  error = false,\n  selectionColor,\n  underlineColor: _underlineColor,\n  outlineColor: customOutlineColor,\n  activeOutlineColor,\n  textColor,\n  dense,\n  style,\n  theme,\n  render = (props: RenderProps) => <NativeTextInput {...props} />,\n  multiline = false,\n  parentState,\n  innerRef,\n  onFocus,\n  forceFocus,\n  onBlur,\n  onChangeText,\n  onLayoutAnimatedText,\n  onLeftAffixLayoutChange,\n  onRightAffixLayoutChange,\n  left,\n  right,\n  placeholderTextColor,\n  testID = 'text-input-outlined',\n  ...rest\n}: ChildTextInputProps) => {\n  const adornmentConfig = getAdornmentConfig({ left, right });\n\n  const { colors, isV3, roundness } = theme;\n  const font = isV3 ? theme.fonts.bodyLarge : theme.fonts.regular;\n  const hasActiveOutline = parentState.focused || error;\n\n  const { INPUT_PADDING_HORIZONTAL, MIN_HEIGHT, ADORNMENT_OFFSET } =\n    getConstants(isV3);\n\n  const {\n    fontSize: fontSizeStyle,\n    fontWeight,\n    lineHeight,\n    height,\n    backgroundColor = colors?.background,\n    textAlign,\n    ...viewStyle\n  } = (StyleSheet.flatten(style) || {}) as TextStyle;\n  const fontSize = fontSizeStyle || MAXIMIZED_LABEL_FONT_SIZE;\n\n  const {\n    inputTextColor,\n    activeColor,\n    outlineColor,\n    placeholderColor,\n    errorColor,\n  } = getOutlinedInputColors({\n    activeOutlineColor,\n    customOutlineColor,\n    textColor,\n    disabled,\n    error,\n    theme,\n  });\n\n  const labelScale = MINIMIZED_LABEL_FONT_SIZE / fontSize;\n  const fontScale = MAXIMIZED_LABEL_FONT_SIZE / fontSize;\n\n  const labelWidth = parentState.labelLayout.width;\n  const labelHeight = parentState.labelLayout.height;\n  const labelHalfWidth = labelWidth / 2;\n  const labelHalfHeight = labelHeight / 2;\n\n  const baseLabelTranslateX =\n    (I18nManager.getConstants().isRTL ? 1 : -1) *\n    (labelHalfWidth -\n      (labelScale * labelWidth) / 2 -\n      (fontSize - MINIMIZED_LABEL_FONT_SIZE) * labelScale);\n\n  let labelTranslationXOffset = 0;\n  const isAdornmentLeftIcon = adornmentConfig.some(\n    ({ side, type }) =>\n      side === AdornmentSide.Left && type === AdornmentType.Icon\n  );\n  if (isAdornmentLeftIcon) {\n    labelTranslationXOffset =\n      (I18nManager.getConstants().isRTL ? -1 : 1) *\n      (ADORNMENT_SIZE + ADORNMENT_OFFSET - (isV3 ? 0 : 8));\n  }\n\n  const minInputHeight =\n    (dense ? MIN_DENSE_HEIGHT_OUTLINED : MIN_HEIGHT) - LABEL_PADDING_TOP;\n\n  const inputHeight = calculateInputHeight(labelHeight, height, minInputHeight);\n\n  const topPosition = calculateLabelTopPosition(\n    labelHeight,\n    inputHeight,\n    LABEL_PADDING_TOP\n  );\n\n  if (height && typeof height !== 'number') {\n    // eslint-disable-next-line\n    console.warn('Currently we support only numbers in height prop');\n  }\n\n  const paddingSettings = {\n    height: height ? +height : null,\n    labelHalfHeight,\n    offset: LABEL_PADDING_TOP,\n    multiline: multiline ? multiline : null,\n    dense: dense ? dense : null,\n    topPosition,\n    fontSize,\n    lineHeight,\n    label,\n    scale: fontScale,\n    isAndroid: Platform.OS === 'android',\n    styles: StyleSheet.flatten(\n      dense ? styles.inputOutlinedDense : styles.inputOutlined\n    ) as Padding,\n  };\n\n  const pad = calculatePadding(paddingSettings);\n\n  const paddingOut = adjustPaddingOut({ ...paddingSettings, pad });\n\n  const baseLabelTranslateY =\n    -labelHalfHeight - (topPosition + OUTLINE_MINIMIZED_LABEL_Y_OFFSET);\n\n  const placeholderOpacity = hasActiveOutline\n    ? interpolatePlaceholder(parentState.labeled, hasActiveOutline)\n    : parentState.labelLayout.measured\n    ? 1\n    : 0;\n\n  const placeholderStyle = {\n    position: 'absolute',\n    left: 0,\n    paddingHorizontal: INPUT_PADDING_HORIZONTAL,\n  };\n\n  const labelProps = {\n    label,\n    onLayoutAnimatedText,\n    placeholderOpacity,\n    error,\n    placeholderStyle,\n    baseLabelTranslateY,\n    baseLabelTranslateX,\n    font,\n    fontSize,\n    lineHeight,\n    fontWeight,\n    labelScale,\n    wiggleOffsetX: LABEL_WIGGLE_X_OFFSET,\n    topPosition,\n    hasActiveOutline,\n    activeColor,\n    placeholderColor,\n    backgroundColor: backgroundColor as ColorValue,\n    errorColor,\n    labelTranslationXOffset,\n    roundness,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n    testID,\n  };\n\n  const minHeight = (height ||\n    (dense ? MIN_DENSE_HEIGHT_OUTLINED : MIN_HEIGHT)) as number;\n\n  const outlinedHeight =\n    inputHeight +\n    (!height ? (dense ? LABEL_PADDING_TOP_DENSE / 2 : LABEL_PADDING_TOP) : 0);\n\n  const { leftLayout, rightLayout } = parentState;\n\n  const leftAffixTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: outlinedHeight,\n    affixHeight: leftLayout.height || 0,\n    labelYOffset: -OUTLINE_MINIMIZED_LABEL_Y_OFFSET,\n  });\n\n  const rightAffixTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: outlinedHeight,\n    affixHeight: rightLayout.height || 0,\n    labelYOffset: -OUTLINE_MINIMIZED_LABEL_Y_OFFSET,\n  });\n  const iconTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: outlinedHeight,\n    affixHeight: ADORNMENT_SIZE,\n    labelYOffset: -OUTLINE_MINIMIZED_LABEL_Y_OFFSET,\n  });\n\n  const rightAffixWidth = right\n    ? rightLayout.width || ADORNMENT_SIZE\n    : ADORNMENT_SIZE;\n\n  const leftAffixWidth = left\n    ? leftLayout.width || ADORNMENT_SIZE\n    : ADORNMENT_SIZE;\n\n  const adornmentStyleAdjustmentForNativeInput =\n    getAdornmentStyleAdjustmentForNativeInput({\n      adornmentConfig,\n      rightAffixWidth,\n      leftAffixWidth,\n      mode: 'outlined',\n      isV3,\n    });\n  const affixTopPosition = {\n    [AdornmentSide.Left]: leftAffixTopPosition,\n    [AdornmentSide.Right]: rightAffixTopPosition,\n  };\n  const onAffixChange = {\n    [AdornmentSide.Left]: onLeftAffixLayoutChange,\n    [AdornmentSide.Right]: onRightAffixLayoutChange,\n  };\n\n  let adornmentProps: TextInputAdornmentProps = {\n    adornmentConfig,\n    forceFocus,\n    topPosition: {\n      [AdornmentType.Icon]: iconTopPosition,\n      [AdornmentType.Affix]: affixTopPosition,\n    },\n    onAffixChange,\n    isTextInputFocused: parentState.focused,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n  };\n  if (adornmentConfig.length) {\n    adornmentProps = {\n      ...adornmentProps,\n      left,\n      right,\n      textStyle: { ...font, fontSize, lineHeight, fontWeight },\n      visible: parentState.labeled,\n    };\n  }\n\n  return (\n    <View style={viewStyle}>\n      {/*\n          Render the outline separately from the container\n          This is so that the label can overlap the outline\n          Otherwise the border will cut off the label on Android\n          */}\n      <Outline\n        isV3={isV3}\n        roundness={roundness}\n        hasActiveOutline={hasActiveOutline}\n        focused={parentState.focused}\n        activeColor={activeColor}\n        outlineColor={outlineColor}\n        backgroundColor={backgroundColor}\n      />\n      <View>\n        <View\n          style={[\n            styles.labelContainer,\n            {\n              paddingTop: LABEL_PADDING_TOP,\n              minHeight,\n            },\n          ]}\n        >\n          <InputLabel\n            parentState={parentState}\n            labelProps={labelProps}\n            labelBackground={LabelBackground}\n            maxFontSizeMultiplier={rest.maxFontSizeMultiplier}\n          />\n          {render?.({\n            testID,\n            ...rest,\n            ref: innerRef,\n            onChangeText,\n            placeholder: label ? parentState.placeholder : rest.placeholder,\n            placeholderTextColor: placeholderTextColor || placeholderColor,\n            editable: !disabled && editable,\n            selectionColor:\n              typeof selectionColor === 'undefined'\n                ? activeColor\n                : selectionColor,\n            onFocus,\n            onBlur,\n            underlineColorAndroid: 'transparent',\n            multiline,\n            style: [\n              styles.input,\n              !multiline || (multiline && height)\n                ? { height: inputHeight }\n                : {},\n              paddingOut,\n              {\n                ...font,\n                fontSize,\n                lineHeight,\n                fontWeight,\n                color: inputTextColor,\n                textAlignVertical: multiline ? 'top' : 'center',\n                textAlign: textAlign\n                  ? textAlign\n                  : I18nManager.getConstants().isRTL\n                  ? 'right'\n                  : 'left',\n                paddingHorizontal: INPUT_PADDING_HORIZONTAL,\n              },\n              Platform.OS === 'web' && { outline: 'none' },\n              adornmentStyleAdjustmentForNativeInput,\n            ],\n          } as RenderProps)}\n        </View>\n        <TextInputAdornment {...adornmentProps} />\n      </View>\n    </View>\n  );\n};\n\nexport default TextInputOutlined;\n\ntype OutlineProps = {\n  isV3: boolean;\n  activeColor: string;\n  backgroundColor: ColorValue;\n  hasActiveOutline?: boolean;\n  focused?: boolean;\n  outlineColor?: string;\n  roundness?: number;\n};\n\nconst Outline = ({\n  isV3,\n  activeColor,\n  backgroundColor,\n  hasActiveOutline,\n  focused,\n  outlineColor,\n  roundness,\n}: OutlineProps) => (\n  <View\n    testID=\"text-input-outline\"\n    pointerEvents=\"none\"\n    style={[\n      styles.outline,\n      // eslint-disable-next-line react-native/no-inline-styles\n      {\n        backgroundColor,\n        borderRadius: roundness,\n        borderWidth: (isV3 ? hasActiveOutline : focused) ? 2 : 1,\n        borderColor: hasActiveOutline ? activeColor : outlineColor,\n      },\n    ]}\n  />\n);\n\nconst styles = StyleSheet.create({\n  outline: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 6,\n    bottom: 0,\n  },\n  labelContainer: {\n    paddingBottom: 0,\n  },\n  input: {\n    flexGrow: 1,\n    margin: 0,\n    zIndex: 1,\n  },\n  inputOutlined: {\n    paddingTop: 8,\n    paddingBottom: 8,\n  },\n  inputOutlinedDense: {\n    paddingTop: 4,\n    paddingBottom: 4,\n  },\n});\n"],"mappings":"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"}